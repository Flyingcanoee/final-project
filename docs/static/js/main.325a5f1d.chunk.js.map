{"version":3,"sources":["components/Navigation/Navigation.jsx","api/pokeApi.js","components/PokemonCard/PokemonCard.jsx","api/localStorage.js","components/PokemonList/PokemonList.jsx","components/Header/Header.jsx","containers/MainPage/MainPage.jsx","containers/CaughtPokemonsPage/CaughtPokemons.jsx","components/PokemonInfoCard/PokemonInfoCard.jsx","containers/PokemonInfo/PokemonInfo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","className","bg","variant","Container","Brand","as","Link","to","Nav","getPokemonImage","pokemonId","PokemonCard","props","pokemon","Card","style","width","id","Title","name","Img","src","Body","Button","caught","onClick","event","onClickPokemon","getCaughtPokemons","caughtPokemonsStorage","JSON","parse","localStorage","getItem","releasePokemon","pokemons","find","newPokemons","filter","serialObj","stringify","setItem","PokemonList","useState","setPokemons","pageNumber","setPageNumber","preventDefault","stopPropagation","foundPokemon","map","dayDate","Date","toLocaleDateString","timeDate","toLocaleTimeString","caughtPokemon","push","catchPokemon","useEffect","caughtPokemons","currentOffset","pokemonsOnPage","fetch","then","response","json","getAllPokemons","pokemonInfo","i","results","url","slice","Boolean","length","concat","catch","error","alert","console","log","Spinner","animation","Header","children","MainPage","CaughtPokemons","img","PokemonInfoCard","alt","status","abilities","types","weight","PokemonInfo","useParams","setPokemonInfo","getPokemonById","pokemonInformation","abilitiesArr","pokemonAbilities","ability","typesArr","pokemonTypes","type","newPokemonInfo","App","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.325a5f1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.scss';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <Navbar className=\"navigation\" bg=\"primary\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to={`/`}>\r\n          Pokedex\r\n        </Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link as={Link} to={`/caught-pokemons`}>\r\n            Caught pokemons\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","/**\r\n * Получает картинку покемона\r\n * @param pokemonId id покемона\r\n */\r\nexport function getPokemonImage(pokemonId){\r\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonId}.png`\r\n}\r\n\r\n/**\r\n * Получает информацию о покемоне по его id\r\n * @param pokemonId id покемона\r\n */\r\nexport function getPokemonById(pokemonId){\r\n  return fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n    .then(function (response) {\r\n      return response.json();\r\n    });\r\n}\r\n\r\n/**\r\n * Получает всех покемонов\r\n * @param currentOffset сколько покемонов нужно пропустить\r\n * @param pokemonsOnPage сколько покемонов нужно получить\r\n */\r\nexport function getAllPokemons(currentOffset, pokemonsOnPage){\r\n  return fetch(\r\n    `https://pokeapi.co/api/v2/pokemon?offset=${currentOffset}&limit=${pokemonsOnPage}`\r\n  )\r\n    .then(function (response) {\r\n      return response.json();\r\n    });\r\n}","import React from 'react';\r\nimport './PokemonCard.scss';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPokemonImage } from '../../api/pokeApi';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PokemonCard(props) {\r\n  const pokemon = props.pokemon;\r\n\r\n  return (\r\n    <Card\r\n      className=\"pokemon-card\"\r\n      style={{ width: '18rem' }}\r\n      as={Link}\r\n      to={`/pokemon-info/${pokemon.id}`}\r\n    >\r\n      <div className=\"pokemon-card__white-stripe\"></div>\r\n      <Card.Title>\r\n        {pokemon.name}\r\n        <br />\r\n        <span className=\"pokemon-card__id\">#{pokemon.id}</span>\r\n      </Card.Title>\r\n      <Card.Img variant=\"top\" src={getPokemonImage(pokemon.id)} />\r\n      <Card.Body>\r\n        <Button\r\n          className={pokemon.caught ? 'pokemon-card__caught' : ''}\r\n          variant=\"primary\"\r\n          onClick={(event) => props.onClickPokemon(pokemon.id, event)}\r\n          key={pokemon.id}\r\n        >\r\n          {pokemon.caught ? 'RELEASE' : 'CATCH'}\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nPokemonCard.propTypes = {\r\n  pokemon: PropTypes.object,\r\n  onClickPokemon: PropTypes.object,\r\n};\r\nexport default PokemonCard;\r\n","/**\r\n * Возвращает массив пойманных покемонов\r\n */\r\nexport function getCaughtPokemons() { //\r\n  let caughtPokemonsStorage = JSON.parse(localStorage.getItem('myKey'));\r\n  if(!caughtPokemonsStorage){\r\n    caughtPokemonsStorage = [];\r\n  }\r\n  return caughtPokemonsStorage;\r\n}\r\n\r\n/**\r\n * Ловит покемона\r\n * @param pokemonId id покемона\r\n * @param dayDate дата поимки покемона(день)\r\n * @param timeDate дата поимки покемона(время)\r\n * @param name имя покемона\r\n */\r\nexport function catchPokemon(pokemonId, dayDate, timeDate, name) {\r\n  let pokemons = getCaughtPokemons(); \r\n  let foundPokemon = pokemons.find(pokemon => pokemon.id === pokemonId)\r\n  if(!foundPokemon){\r\n    let caughtPokemon = {id: pokemonId, dayDate: dayDate, timeDate: timeDate, name: name}\r\n    pokemons.push(caughtPokemon); \r\n    let serialObj = JSON.stringify(pokemons);\r\n    localStorage.setItem('myKey', serialObj);\r\n  }\r\n} \r\n\r\n/**\r\n * Освобождает покемона\r\n * @param pokemonId id покемона\r\n */\r\nexport function releasePokemon(pokemonId) {\r\n  let pokemons = getCaughtPokemons(); \r\n  let foundPokemon = pokemons.find(pokemon => pokemon.id === pokemonId);\r\n  if(foundPokemon){\r\n    let newPokemons = pokemons.filter((pokemon => pokemon.id !== pokemonId)); \r\n    let serialObj = JSON.stringify(newPokemons);\r\n    localStorage.setItem('myKey', serialObj);\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport PokemonCard from '../../components/PokemonCard/PokemonCard';\r\nimport {\r\n  catchPokemon,\r\n  getCaughtPokemons,\r\n  releasePokemon,\r\n} from '../../api/localStorage.js';\r\nimport { getAllPokemons } from '../../api/pokeApi';\r\nimport './PokemonList.scss';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function PokemonList() {\r\n  let [pokemons, setPokemons] = useState([]);\r\n  let [pageNumber, setPageNumber] = useState(0);\r\n\r\n  function onClickLoadMore() {\r\n    setPageNumber(pageNumber + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const caughtPokemons = getCaughtPokemons();\r\n    const pokemonsOnPage = 20;\r\n    const currentOffset = pokemonsOnPage * pageNumber;\r\n\r\n    getAllPokemons(currentOffset, pokemonsOnPage)\r\n      .then(function (pokemonInfo) {\r\n        for (let i = 0; i < pokemonInfo.results.length; i++) {\r\n          let pokemon = pokemonInfo.results[i];\r\n          let pokemonUrl = pokemon.url;\r\n          let pokemonId = pokemonUrl.slice(34, -1);\r\n          pokemon.id = pokemonId;\r\n          let foundPokemon = caughtPokemons.find((pokemon) => pokemon.id === pokemonId);\r\n          pokemon.caught = Boolean(foundPokemon);\r\n        }\r\n        setPokemons(pokemons.concat(pokemonInfo.results));\r\n        return pokemonInfo;\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Couldn't load pokemons.\");\r\n        console.log(error);\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  function onClickPokemon(id, event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const caughtPokemons = getCaughtPokemons();\r\n    let foundPokemon = caughtPokemons.find((pokemon) => pokemon.id === id);\r\n    let newPokemons = pokemons.map((pokemon) => {\r\n      if (!foundPokemon) {\r\n        if (pokemon.id === id) {\r\n          let dayDate = new Date().toLocaleDateString();\r\n          let timeDate = new Date().toLocaleTimeString();\r\n          pokemon.caught = true;\r\n          catchPokemon(id, dayDate, timeDate, pokemon.name);\r\n        }\r\n      } else {\r\n        if (pokemon.id === id) {\r\n          pokemon.caught = false;\r\n          releasePokemon(id);\r\n        }\r\n      }\r\n      return pokemon;\r\n    });\r\n    setPokemons(newPokemons);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {pokemons.length > 0 ? (\r\n        <>\r\n          <div className=\"pokemon-list__container\">\r\n            {pokemons.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  onClickPokemon={onClickPokemon}\r\n                  key={pokemon.id}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"pokemon-list__btn-container\">\r\n            <Button onClick={onClickLoadMore} className=\"pokemon-list__loading\">\r\n              LOAD MORE\r\n            </Button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"pokemon-list__spinner-container\">\r\n          <Spinner animation=\"border\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Header.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Header(props) {\r\n  return <h1 className=\"header\">{props.children}</h1>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PokemonList from '../../components/PokemonList/PokemonList.jsx';\r\nimport Header from '../../components/Header/Header.jsx';\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header>Pokédex</Header>\r\n      <PokemonList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getCaughtPokemons, releasePokemon } from '../../api/localStorage';\r\nimport { getPokemonImage } from '../../api/pokeApi';\r\nimport PokemonCard from '../../components/PokemonCard/PokemonCard';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Header from '../../components/Header/Header.jsx';\r\n\r\nfunction CaughtPokemons() {\r\n  let [pokemons, setPokemons] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let caughtPokemons = getCaughtPokemons();\r\n    for (let i = 0; i < caughtPokemons.length; i++) {\r\n      caughtPokemons[i].img = getPokemonImage(caughtPokemons[i].id);\r\n      caughtPokemons[i].caught = true;\r\n      delete caughtPokemons[i].dayDate;\r\n      delete caughtPokemons[i].timeDate;\r\n    }\r\n    setPokemons(caughtPokemons);\r\n  }, []);\r\n\r\n  function onClickPokemon(id, event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const newPokemons = pokemons.filter(function (pokemon) {\r\n      return pokemon.id !== id;\r\n    });\r\n    releasePokemon(id);\r\n    setPokemons(newPokemons);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header>Caught Pokemons</Header>\r\n      {pokemons ? (\r\n        <>\r\n          <div className=\"pokemon-container\">\r\n            {pokemons.map((pokemon) => (\r\n              <PokemonCard\r\n                pokemon={pokemon}\r\n                onClickPokemon={onClickPokemon}\r\n                key={pokemon.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Spinner animation=\"border\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CaughtPokemons;\r\n","import React from 'react';\r\nimport './PokemonInfoCard.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { getPokemonImage } from '../../api/pokeApi';\r\n\r\nexport default function PokemonInfoCard(props) {\r\n  return (\r\n    <div className=\"pokemon-info-card\">\r\n      <div className=\"pokemon-info-card__white-stripe\"></div>\r\n      <div className=\"pokemon-info-card__data\">\r\n        <img\r\n          className=\"pokemon-info-card__image\"\r\n          src={getPokemonImage(props.id)}\r\n          alt=\"pokemon\"\r\n        />\r\n        <div className=\"pokemon-info-card__resume\">\r\n          <h1 className=\"pokemon-info-card__name\">\r\n            {props.name} <span className=\"pokemon-info-card__id\">#{props.id}</span>\r\n          </h1>\r\n\r\n          <div className=\"pokemon-info-card__characteristics\">\r\n            <div className=\"pokemon-info-card__keys\">\r\n              <p className=\"pokemon-info-card__info-name\">Abilities:</p>\r\n              <p className=\"pokemon-info-card__info-name\">Types: </p>\r\n              <p className=\"pokemon-info-card__info-name\">Weight:</p>\r\n              <p className=\"pokemon-info-card__info-name\">Status:</p>\r\n              {props.status === 'caught' ? (\r\n                <p className=\"pokemon-info-card__info-name\">Date:</p>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className=\"pokemon-info-card__values\">\r\n              <p>{props.abilities}</p>\r\n              <p>{props.types}</p>\r\n              <p>{props.weight}</p>\r\n              <p>{props.status} </p>\r\n              {props.status === 'caught' ? (\r\n                <>\r\n                  {props.dayDate} <br /> <br />\r\n                  {props.timeDate}\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPokemonInfoCard.propTypes = {\r\n  id: PropTypes.number,\r\n  status: PropTypes.string,\r\n  name: PropTypes.string,\r\n  abilities: PropTypes.array,\r\n  weight: PropTypes.number,\r\n  dayDate: PropTypes.string,\r\n  timeDate: PropTypes.string,\r\n  types: PropTypes.array,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCaughtPokemons } from '../../api/localStorage';\r\nimport { getPokemonById } from '../../api/pokeApi';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport PokemonInfoCard from '../../components/PokemonInfoCard/PokemonInfoCard.jsx';\r\n\r\nfunction PokemonInfo() {\r\n  const params = useParams();\r\n  const pokemonId = params.id;\r\n\r\n  let [pokemonInfo, setPokemonInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getPokemonById(pokemonId)\r\n      .then(function (pokemonInformation) {\r\n        let abilitiesArr = pokemonInformation.abilities;\r\n        let pokemonAbilities = '';\r\n        for (let i = 0; i < abilitiesArr.length; i++) {\r\n          pokemonAbilities += abilitiesArr[i].ability.name + ' ';\r\n        }\r\n        let typesArr = pokemonInformation.types;\r\n        let pokemonTypes = '';\r\n        for (let i = 0; i < typesArr.length; i++) {\r\n          pokemonTypes += typesArr[i].type.name + ' ';\r\n        }\r\n\r\n        let newPokemonInfo = {\r\n          name: pokemonInformation.name,\r\n          types: pokemonTypes,\r\n          weight: pokemonInformation.weight,\r\n          abilities: pokemonAbilities,\r\n        };\r\n\r\n        let caughtPokemons = getCaughtPokemons();\r\n        let foundPokemon = caughtPokemons.find((pokemon) => pokemon.id === pokemonId);\r\n        if (foundPokemon) {\r\n          newPokemonInfo.status = 'caught';\r\n          newPokemonInfo.dayDate = foundPokemon.dayDate;\r\n          newPokemonInfo.timeDate = foundPokemon.timeDate;\r\n        } else {\r\n          newPokemonInfo.status = 'free';\r\n        }\r\n        setPokemonInfo(newPokemonInfo);\r\n        return newPokemonInfo;\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Couldn't load pokemons.\");\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pokemon-info\">\r\n      {pokemonInfo ? (\r\n        <PokemonInfoCard\r\n          id={pokemonId}\r\n          status={pokemonInfo.status}\r\n          name={pokemonInfo.name}\r\n          abilities={pokemonInfo.abilities}\r\n          weight={pokemonInfo.weight}\r\n          dayDate={pokemonInfo.dayDate}\r\n          timeDate={pokemonInfo.timeDate}\r\n          types={pokemonInfo.types}\r\n        />\r\n      ) : (\r\n        <div className=\"d-flex justify-content-center mt-5\">\r\n          <Spinner animation=\"border\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default PokemonInfo;\r\n","import React from 'react';\nimport Navigation from './components/Navigation/Navigation.jsx';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport MainPage from './containers/MainPage/MainPage.jsx';\nimport CaughtPokemons from './containers/CaughtPokemonsPage/CaughtPokemons.jsx';\nimport PokemonInfo from './containers/PokemonInfo/PokemonInfo.jsx';\n// import { createBrowserHistory } from 'history';\n\n// export const history = createBrowserHistory({\n//   basename: process.env.PUBLIC_URL\n// });\n\nfunction App() {\n  return (\n    <>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navigation />\n        <Switch>\n          <Route path=\"/caught-pokemons\">\n            <CaughtPokemons />\n          </Route>\n          <Route path=\"/pokemon-info/:id\">\n            <PokemonInfo />\n          </Route>\n          <Route path=\"/\">\n            <MainPage />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}